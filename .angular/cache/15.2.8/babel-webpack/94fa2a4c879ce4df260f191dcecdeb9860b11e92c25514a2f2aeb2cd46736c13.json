{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class UsersService {\n  constructor() {\n    this.usersChanged = new Subject();\n    this.users = [];\n  }\n  setUsers(users) {\n    this.users = users;\n    this.usersChanged.next(this.users.slice());\n  }\n  getUsers() {\n    return this.users.slice();\n  }\n  getUser(index) {\n    return this.users[index];\n  }\n  addUser(recipe) {\n    this.users.push(recipe);\n    this.usersChanged.next(this.users.slice());\n  }\n  updateUser(index, newUser) {\n    this.users[index] = newUser;\n    this.usersChanged.next(this.users.slice());\n  }\n  deleteUser(index) {\n    this.users.splice(index, 1);\n    0;\n    this.usersChanged.next(this.users.slice());\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)();\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,YAAY;EAGvBC;IAFA,iBAAY,GAAG,IAAIF,OAAO,EAAU;IAI5B,UAAK,GAAW,EAAE;EAFV;EAIhBG,QAAQ,CAACC,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE,CAAC;EAC5C;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACJ,KAAK,CAACG,KAAK,EAAE;EAC3B;EAEAE,OAAO,CAACC,KAAa;IACnB,OAAO,IAAI,CAACN,KAAK,CAACM,KAAK,CAAC;EAC1B;EAEAC,OAAO,CAACC,MAAY;IAClB,IAAI,CAACR,KAAK,CAACS,IAAI,CAACD,MAAM,CAAC;IACvB,IAAI,CAACP,YAAY,CAACC,IAAI,CAAC,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE,CAAC;EAC5C;EAEAO,UAAU,CAACJ,KAAa,EAAEK,OAAa;IACrC,IAAI,CAACX,KAAK,CAACM,KAAK,CAAC,GAAGK,OAAO;IAC3B,IAAI,CAACV,YAAY,CAACC,IAAI,CAAC,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE,CAAC;EAC5C;EAEAS,UAAU,CAACN,KAAa;IACtB,IAAI,CAACN,KAAK,CAACa,MAAM,CAACP,KAAK,EAAE,CAAC,CAAC;IAAC,CAAC;IAC7B,IAAI,CAACL,YAAY,CAACC,IAAI,CAAC,IAAI,CAACF,KAAK,CAACG,KAAK,EAAE,CAAC;EAC5C;;AAjCWN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAiB,SAAZjB,YAAY;EAAAkB,YAFX;AAAM","names":["Subject","UsersService","constructor","setUsers","users","usersChanged","next","slice","getUsers","getUser","index","addUser","recipe","push","updateUser","newUser","deleteUser","splice","factory","providedIn"],"sourceRoot":"","sources":["/Users/3rb/workspace/learning/practice/auth/auth-practice-2/src/app/shared/users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from './user.model';\nimport { Subject } from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  usersChanged = new Subject<User[]>();\n\n  constructor() { }\n\n  private users: User[] = [];\n\n  setUsers(users: User[]) {\n    this.users = users;\n    this.usersChanged.next(this.users.slice());\n  }\n\n  getUsers () {\n    return this.users.slice();\n  }\n\n  getUser(index: number) {\n    return this.users[index];\n  }\n\n  addUser(recipe: User) {\n    this.users.push(recipe);\n    this.usersChanged.next(this.users.slice());\n  }\n\n  updateUser(index: number, newUser: User) {\n    this.users[index] = newUser;\n    this.usersChanged.next(this.users.slice());\n  }\n\n  deleteUser(index: number) {\n    this.users.splice(index, 1);0\n    this.usersChanged.next(this.users.slice());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}